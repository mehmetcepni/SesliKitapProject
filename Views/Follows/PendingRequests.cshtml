@model IEnumerable<SesliKitapWeb.Models.UserFollow>
@{
    ViewData["Title"] = "Bekleyen Takip İstekleri";
}

<style>
    .requests-container {
        max-width: 800px;
        margin: 0 auto;
    }  
    
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 15px;
        padding: 2rem;
        color: white;
        margin-bottom: 2rem;
        text-align: center;
    }
    
    .page-header h1 {
        font-size: 2rem;
        font-weight: bold;
        margin: 0;
    }
    
    .request-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        margin-bottom: 1rem;
        transition: all 0.2s ease;
        border: 1px solid rgba(0,0,0,0.05);
    }
    
    .request-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.12);
    }
    
    .request-content {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }
    
    .user-avatar {
        width: 70px;
        height: 70px;
        border-radius: 50%;
        background: linear-gradient(135deg, #ffeaa7 0%, #fdcb6e 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.8rem;
        font-weight: bold;
        color: #2d3436;
        flex-shrink: 0;
    }
    
    .user-info {
        flex: 1;
    }
    
    .user-name {
        font-size: 1.2rem;
        font-weight: bold;
        color: #2d3436;
        margin-bottom: 0.3rem;
    }
    
    .user-username {
        font-size: 0.9rem;
        color: #636e72;
        margin-bottom: 0.5rem;
    }
    
    .request-time {
        font-size: 0.85rem;
        color: #95a5a6;
    }
    
    .action-buttons {
        display: flex;
        gap: 0.75rem;
    }
    
    .btn-accept {
        background: #10ac84;
        border: none;
        color: white;
        padding: 0.7rem 1.5rem;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s;
        cursor: pointer;
    }
    
    .btn-accept:hover {
        background: #0e9273;
        transform: scale(1.05);
    }
    
    .btn-reject {
        background: #ee5a6f;
        border: none;
        color: white;
        padding: 0.7rem 1.5rem;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s;
        cursor: pointer;
    }
    
    .btn-reject:hover {
        background: #d63031;
        transform: scale(1.05);
    }
    
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }
    
    .empty-state-icon {
        font-size: 5rem;
        color: #b2bec3;
        margin-bottom: 1rem;
    }
    
    .empty-state h3 {
        color: #2d3436;
        margin-bottom: 0.5rem;
    }
    
    .empty-state p {
        color: #636e72;
    }
    
    .alert-message {
        padding: 1rem 1.5rem;
        border-radius: 10px;
        margin-bottom: 1.5rem;
        font-weight: 500;
    }
    
    @@media (max-width: 768px) {
        .request-content {
            flex-direction: column;
            text-align: center;
        }
        
        .action-buttons {
            width: 100%;
            justify-content: stretch;
        }
        
        .action-buttons button {
            flex: 1;
        }
    }
</style>

<div class="requests-container">
    <div class="page-header">
        <h1><i class="bi bi-person-plus-fill me-2"></i>Bekleyen Takip İstekleri</h1>
    </div>
    
    @if (TempData["Message"] != null)
    {
        <div class="alert-message alert alert-success">
            <i class="bi bi-check-circle me-2"></i>@TempData["Message"]
        </div>
    }
    
    @if (Model != null && Model.Any())
    {
        @foreach (var request in Model)
        {
            <div class="request-card">
                <div class="request-content">
                    <div class="user-avatar">
                        @request.Follower.FirstName[0]@request.Follower.LastName[0]
                    </div>
                    <div class="user-info">
                        <div class="user-name">@request.Follower.FirstName @request.Follower.LastName</div>
                        <div class="user-username">@@@request.Follower.UserName</div>
                        <div class="request-time">
                            <i class="bi bi-clock me-1"></i>@request.CreatedAt.ToString("dd MMMM yyyy, HH:mm")
                        </div>
                    </div>
                    <div class="action-buttons">
                        <form method="post" asp-action="AcceptRequest" asp-route-id="@request.Id" style="display: inline;">
                            <button type="submit" class="btn-accept">
                                <i class="bi bi-check-lg me-1"></i>Onayla
                            </button>
                        </form>
                        <form method="post" asp-action="RejectRequest" asp-route-id="@request.Id" style="display: inline;">
                            <button type="submit" class="btn-reject">
                                <i class="bi bi-x-lg me-1"></i>Reddet
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="empty-state">
            <div class="empty-state-icon">
                <i class="bi bi-inbox"></i>
            </div>
            <h3>Bekleyen İstek Yok</h3>
            <p>Şu anda bekleyen takip isteğiniz bulunmuyor.</p>
        </div>
    }
</div>

