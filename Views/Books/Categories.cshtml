@model IEnumerable<SesliKitapWeb.Models.Category>

@{
    ViewData["Title"] = "Kategoriler";
}

<style>
    .categories-container {
        max-width: 1200px;
        margin: 0 auto;
    }
    
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        padding: 3rem 2rem;
        color: white;
        margin-bottom: 3rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }
    
    .page-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -20%;
        width: 400px;
        height: 400px;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="3" fill="rgba(255,255,255,0.1)"/></svg>');
        opacity: 0.3;
        animation: float 15s infinite linear;
    }
    
    @@keyframes float {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    .page-header h1 {
        font-size: 3rem;
        font-weight: 800;
        margin: 0 0 1rem 0;
        position: relative;
        z-index: 1;
    }
    
    .page-header p {
        font-size: 1.2rem;
        opacity: 0.95;
        position: relative;
        z-index: 1;
    }
    
    .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 2rem;
        margin-bottom: 3rem;
    }
    
    .category-card {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        border: 1px solid rgba(0,0,0,0.05);
        position: relative;
        overflow: hidden;
        cursor: pointer;
    }
    
    .category-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 5px;
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        transform: scaleX(0);
        transition: transform 0.4s;
    }
    
    .category-card:hover::before {
        transform: scaleX(1);
    }
    
    .category-card:hover {
        transform: translateY(-10px) scale(1.02);
        box-shadow: 0 15px 40px rgba(102, 126, 234, 0.2);
    }
    
    .category-icon {
        width: 80px;
        height: 80px;
        border-radius: 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        margin: 0 auto 1.5rem;
        color: white;
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        transition: all 0.3s;
    }
    
    .category-card:hover .category-icon {
        transform: scale(1.1) rotate(5deg);
        box-shadow: 0 12px 30px rgba(102, 126, 234, 0.4);
    }
    
    .category-name {
        font-size: 1.6rem;
        font-weight: 700;
        color: #2d3436;
        margin-bottom: 0.75rem;
        text-align: center;
        transition: color 0.3s;
    }
    
    .category-card:hover .category-name {
        color: #667eea;
    }
    
    .category-description {
        color: #636e72;
        font-size: 0.95rem;
        text-align: center;
        line-height: 1.6;
        margin-bottom: 1.5rem;
        min-height: 3rem;
    }
    
    .category-stats {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
        padding: 1rem;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
        border-radius: 12px;
        margin-bottom: 1.5rem;
    }
    
    .category-count {
        font-size: 1.3rem;
        font-weight: 700;
        color: #667eea;
    }
    
    .category-label {
        font-size: 0.9rem;
        color: #636e72;
    }
    
    .btn-view-books {
        width: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
        padding: 1rem;
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        position: relative;
        overflow: hidden;
    }
    
    .btn-view-books::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.3);
        transform: translate(-50%, -50%);
        transition: width 0.6s, height 0.6s;
    }
    
    .btn-view-books:hover::before {
        width: 300px;
        height: 300px;
    }
    
    .btn-view-books:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }
    
    .btn-view-books span {
        position: relative;
        z-index: 1;
    }
    
    .empty-state {
        text-align: center;
        padding: 5rem 2rem;
        background: white;
        border-radius: 20px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    }
    
    .empty-state-icon {
        font-size: 5rem;
        color: #b2bec3;
        margin-bottom: 1.5rem;
    }
    
    .empty-state h3 {
        color: #2d3436;
        font-size: 1.8rem;
        margin-bottom: 0.75rem;
    }
    
    .empty-state p {
        color: #636e72;
        font-size: 1.1rem;
    }
    
    @@media (max-width: 768px) {
        .page-header {
            padding: 2rem 1.5rem;
        }
        
        .page-header h1 {
            font-size: 2rem;
        }
        
        .categories-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
        
        .category-card {
            padding: 1.5rem;
        }
    }
</style>

<div class="categories-container">
    <div class="page-header">
        <h1><i class="bi bi-grid-3x3-gap me-3"></i>Kitap Kategorileri</h1>
        <p>Farklı kategorilerde binlerce kitaba keşfedin</p>
    </div>
    
    @if (Model != null && Model.Any())
    {
        <div class="categories-grid">
            @foreach (var category in Model)
            {
                <div class="category-card" onclick="window.location='@Url.Action("BooksByCategory", "Books", new { id = category.Id })'">
                    <div class="category-icon">
                        <i class="bi bi-book"></i>
                    </div>
                    <h3 class="category-name">@category.Name</h3>
                    <p class="category-description">@category.Description</p>
                    
                    <div class="category-stats">
                        <span class="category-count">@(category.Books?.Count ?? 0)</span>
                        <span class="category-label">Kitap</span>
                    </div>
                    
                    <button class="btn-view-books">
                        <span>
                            <i class="bi bi-arrow-right-circle me-2"></i>Kitapları İncele
                        </span>
                    </button>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-state-icon">
                <i class="bi bi-inbox"></i>
            </div>
            <h3>Henüz Kategori Yok</h3>
            <p>Şu anda kategorilerimiz hazırlanıyor. Yakında buradan bulabilirsiniz.</p>
        </div>
    }
</div>

<script>
    // Kartlara tıklanabilirlik ekle
    document.querySelectorAll('.category-card').forEach(card => {
        card.addEventListener('click', function() {
            const link = card.querySelector('.btn-view-books');
            if (link) {
                card.style.cursor = 'pointer';
            }
        });
    });
</script>
